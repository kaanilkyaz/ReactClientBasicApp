{"ast":null,"code":"var _jsxFileName = \"/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ListClient.jsx\";\nimport React, { Component } from 'react';\nimport ClientDataService from '/Users/kaan/Desktop/VirgosolApp/virgosol-app/src/api/virgosolApp/ClientDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ListClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: []\n    };\n    this.updateClientClicked = this.updateClientClicked.bind(this);\n    this.deleteClientClicked = this.deleteClientClicked.bind(this);\n    this.refreshClients = this.refreshClients.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshClients();\n  }\n\n  refreshClients() {\n    let userName = AuthenticationService.getLoggedInUserName;\n    ClientDataService.retrieveAllClients(userName).then(response => {\n      this.setState({\n        clients: response.data\n      });\n    });\n  }\n\n  deleteClientClicked(id) {\n    let userName = AuthenticationService.getLoggedInUserName;\n    ClientDataService.deleteClient(userName, id).then(response => {\n      this.refreshClients();\n    });\n  }\n\n  updateClientClicked(id) {\n    this.props.history.push(`/clients:${id}`);\n    /*let userName = AuthenticationService.getLoggedInUserName\n    ClientDataService.updateClient(userName,id)\n    .then(\n        response => {\n        this.refreshClients()\n    })*/\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"List Clients\"), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Contact \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Number of Employees\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Add\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.clients.map(client => React.createElement(\"tr\", {\n      key: client.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, client.clientName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, client.contact), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, client.address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, client.numberOfEmpolyees), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateClientClicked(client.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteClientClicked(client.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default ListClient;","map":{"version":3,"sources":["/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ListClient.jsx"],"names":["React","Component","ClientDataService","AuthenticationService","ListClient","constructor","props","state","clients","updateClientClicked","bind","deleteClientClicked","refreshClients","componentDidMount","userName","getLoggedInUserName","retrieveAllClients","then","response","setState","data","id","deleteClient","history","push","render","map","client","clientName","contact","address","numberOfEmpolyees"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ClientDataService from '/Users/kaan/Desktop/VirgosolApp/virgosol-app/src/api/virgosolApp/ClientDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\nclass ListClient extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = \n        {\n            clients:[ ]\n        }\n        this.updateClientClicked = this.updateClientClicked.bind(this);\n        this.deleteClientClicked = this.deleteClientClicked.bind(this);\n        this.refreshClients = this.refreshClients.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.refreshClients();\n    }\n\n    refreshClients(){\n        let userName = AuthenticationService.getLoggedInUserName\n        ClientDataService.retrieveAllClients(userName)\n        .then(response => {\n            this.setState({clients : response.data})\n        })\n    }\n\n    deleteClientClicked(id){\n        let userName = AuthenticationService.getLoggedInUserName\n        ClientDataService.deleteClient(userName,id)\n        .then(\n            response => {\n            this.refreshClients()\n        })\n    }\n\n    updateClientClicked(id){\n        this.props.history.push(`/clients:${id}`)\n        /*let userName = AuthenticationService.getLoggedInUserName\n        ClientDataService.updateClient(userName,id)\n        .then(\n            response => {\n            this.refreshClients()\n        })*/\n    }\n    render(){\n        return(\n            <div>\n                <h1>List Clients</h1>\n                <div class = \"container\">\n                    <table className = \"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Contact </th>\n                                <th>Address</th>\n                                <th>Number of Employees</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                                <th>Add</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.clients.map(\n                                    client => \n                                    <tr key={client.id}>\n                                        <td>{client.clientName}</td>\n                                        <td>{client.contact}</td>\n                                        <td>{client.address}</td>\n                                        <td>{client.numberOfEmpolyees}</td>\n                                        <td><button className = \"btn btn-success\" onClick = {() => this.updateClientClicked(client.id)}>Update</button></td>\n                                        <td><button className = \"btn btn-warning\" onClick = {() => this.deleteClientClicked(client.id)}>Delete</button></td>\n                                    </tr>\n                                )\n                            }\n                            \n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListClient"]},"metadata":{},"sourceType":"module"}