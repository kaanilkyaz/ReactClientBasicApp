{"ast":null,"code":"var _jsxFileName = \"/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ListClient.jsx\";\nimport React, { Component } from 'react';\nimport ClientDataService from './ClientDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ListClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: []\n    };\n    this.updateClientClicked = this.updateClientClicked.bind(this);\n    this.deleteClientClicked = this.deleteClientClicked.bind(this);\n    this.refreshClients = this.refreshClients.bind(this);\n    this.addClientClicked = this.addClientClicked.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log(nextProps);\n    console.log(nextState);\n    return true;\n  }\n\n  componentDidMount() {\n    this.refreshClients();\n  }\n\n  refreshClients() {\n    let userName = AuthenticationService.getLoggedInUserName();\n    ClientDataService.retrieveAllClients(userName).then(response => {\n      this.setState({\n        clients: response.data\n      });\n    });\n  }\n\n  deleteClientClicked(id) {\n    let userName = AuthenticationService.getLoggedInUserName;\n    ClientDataService.deleteClient(userName, id).then(response => {\n      this.refreshClients();\n    });\n  }\n\n  updateClientClicked(id) {\n    this.props.history.push(`/clients/${id}`);\n  }\n\n  addClientClicked() {\n    this.props.history.push(`/clients/-1`);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"List Clients\"), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Contact \"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Number of Employees\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Update\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.clients.map(client => React.createElement(\"tr\", {\n      key: client.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, client.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, client.contact), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, client.Address), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, client.numberOfEmployees), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateClientClicked(client.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteClientClicked(client.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Delete\")))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.addClientClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default ListClient;","map":{"version":3,"sources":["/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ListClient.jsx"],"names":["React","Component","ClientDataService","AuthenticationService","ListClient","constructor","props","state","clients","updateClientClicked","bind","deleteClientClicked","refreshClients","addClientClicked","componentWillUnmount","console","log","shouldComponentUpdate","nextProps","nextState","componentDidMount","userName","getLoggedInUserName","retrieveAllClients","then","response","setState","data","id","deleteClient","history","push","render","map","client","name","contact","Address","numberOfEmployees"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport ClientDataService from './ClientDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\nclass ListClient extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = \n        {\n            clients:[ ]\n        }\n        this.updateClientClicked = this.updateClientClicked.bind(this)\n        this.deleteClientClicked = this.deleteClientClicked.bind(this)\n        this.refreshClients = this.refreshClients.bind(this)\n        this.addClientClicked = this.addClientClicked.bind(this)\n\n    }\n\n    componentWillUnmount() {\n        console.log('componentWillUnmount')\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        console.log('shouldComponentUpdate')\n        console.log(nextProps)\n        console.log(nextState)\n        return true\n    }\n\n    componentDidMount(){\n        this.refreshClients()\n    }\n\n    refreshClients(){\n        let userName = AuthenticationService.getLoggedInUserName()\n        ClientDataService.retrieveAllClients(userName)\n        .then(response => {\n            this.setState({clients : response.data})\n        })\n    }\n\n    deleteClientClicked(id){\n        let userName = AuthenticationService.getLoggedInUserName\n        ClientDataService.deleteClient(userName,id)\n        .then(\n            response => {\n            this.refreshClients()\n        })\n    }\n\n    updateClientClicked(id){\n        this.props.history.push(`/clients/${id}`)\n        \n    }\n    addClientClicked() {\n        this.props.history.push(`/clients/-1`)\n    }\n    render(){\n        return(\n            <div>\n                <h1>List Clients</h1>\n                <div class = \"container\">\n                    <table className = \"table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Contact </th>\n                                <th>Address</th>\n                                <th>Number of Employees</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.clients.map(\n                                    client => \n                                    <tr key={client.id}>\n                                        <td>{client.name}</td>\n                                        <td>{client.contact}</td>\n                                        <td>{client.Address}</td>\n                                        <td>{client.numberOfEmployees}</td>\n                                        <td><button className = \"btn btn-success\" onClick = {() => this.updateClientClicked(client.id)}>Update</button></td>\n                                        <td><button className = \"btn btn-warning\" onClick = {() => this.deleteClientClicked(client.id)}>Delete</button></td>\n                                    </tr>\n                                )\n                            }\n                            \n                        </tbody>\n                    </table>\n                    <div className = \"row\">\n                        <button className = \"btn btn-success\" onClick={this.addClientClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListClient"]},"metadata":{},"sourceType":"module"}