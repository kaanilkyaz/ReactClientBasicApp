{"ast":null,"code":"var _jsxFileName = \"/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ClientComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ClientDataService from '/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/api/virgosolApp/ClientDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ClientComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      contact: null,\n      address: '',\n      numberOfEmployees: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    let userName = AuthenticationService.getLoggedInUserName;\n    ClientDataService.retrieveClient(userName, this.state.id).then(response => this.setState({\n      name: response.data.name,\n      contact: response.data.contact,\n      address: response.data.address,\n      numberOfEmployees: response.data.numberOfEmployees\n    }));\n  }\n\n  onSubmit(values) {\n    ClientDataService.updateClient;\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = \"Please enter a client name\";\n    }\n\n    if (typeof (values.numberOfEmployees === String)) {\n      errors.numberOfEmployees = \"Please enter a number of employees\";\n    }\n\n    if (typeof (values.contact === String)) {\n      errors.contact = \"Please enter a valid contact number\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      name,\n      contact,\n      address,\n      numberOfEmployees\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Client\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      initialValues: {\n        name,\n        contact,\n        address,\n        numberOfEmployees\n      },\n      onSubmit: this.onSubmit,\n      validateOnBlur: false,\n      validateOnChange: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"numberOfEmployees\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contact\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Number of Employees\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"numberOfEmployees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default ClientComponent;","map":{"version":3,"sources":["/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/ClientComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ClientDataService","AuthenticationService","ClientComponent","constructor","props","state","id","match","params","name","contact","address","numberOfEmployees","onSubmit","bind","validate","componentDidMount","userName","getLoggedInUserName","retrieveClient","then","response","setState","data","values","updateClient","errors","String","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport ClientDataService from '/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/api/virgosolApp/ClientDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass ClientComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            id:this.props.match.params.id,\n            name: '',\n            contact:null,\n            address:'',\n            numberOfEmployees: null\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount(){\n        let userName = AuthenticationService.getLoggedInUserName\n        ClientDataService.retrieveClient(userName,this.state.id)\n        .then(response => this.setState({\n            name:response.data.name,\n            contact:response.data.contact,\n            address:response.data.address,\n            numberOfEmployees:response.data.numberOfEmployees\n\n        }))\n    }\n    onSubmit(values){\n        ClientDataService.updateClient\n    }\n\n    validate(values){\n        let errors = {}\n        if(!values.name){\n            errors.name=\"Please enter a client name\"\n        }\n\n        if(typeof(values.numberOfEmployees===String)){\n            errors.numberOfEmployees=\"Please enter a number of employees\"\n        }\n\n        if(typeof(values.contact===String)){\n            errors.contact=\"Please enter a valid contact number\"\n        }\n        return errors\n    }\n    render(){\n        let {name,contact,address,numberOfEmployees} = this.state\n\n        return(\n            <div>\n                <h1>Client</h1>\n                <div className = \"container\">\n                    <Formik\n                        initialValues = {{name,contact,address,numberOfEmployees}}\n                        onSubmit = {this.onSubmit}\n                        validateOnBlur={false}\n                        validateOnChange={false}\n                        validate = {this.validate}\n                        enableReinitialize = {true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name =\"numberOfEmployees\" component = \"div\" className = \"alert alert-warning\"/>\n                                    <ErrorMessage name =\"name\" component = \"div\" className = \"alert alert-warning\"/>\n                                    <ErrorMessage name =\"contact\" component = \"div\" className = \"alert alert-warning\"/>\n                                    <fieldset className = \"form-group\">\n                                        <label>Name</label>\n                                        <Field className = \"form-control\" type = \"text\" name = \"name\"/>\n                                    </fieldset>\n                                    <fieldset className = \"form-group\">\n                                        <label>Contact</label>\n                                        <Field className = \"form-control\" type = \"text\" name = \"contact\"/>\n                                    </fieldset>\n                                    <fieldset className = \"form-group\">\n                                        <label>Address</label>\n                                        <Field className = \"form-control\" type = \"text\" name = \"address\"/>\n                                    </fieldset>\n                                    <fieldset className = \"form-group\">\n                                        <label>Number of Employees</label>\n                                        <Field className = \"form-control\" type = \"text\" name = \"numberOfEmployees\"/>\n                                    </fieldset>\n                                    <button className = \"btn btn-success\" type = \"submit\">Save</button>\n                                </Form>\n                            )\n\n                        }\n\n                    </Formik>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ClientComponent"]},"metadata":{},"sourceType":"module"}