{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../../Constants';\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/kaan/Desktop/virgosolAppReact/virgosol-app-react/src/virgosol/AuthenticationService.js"],"names":["axios","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","registerSuccessfulLogin","username","password","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,MAAMC,gCAAgC,GAAG,mBAAzC;;AAEP,MAAMC,qBAAN,CAA2B;AACvBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AACtCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CH,QAA3C;AACH;;AACDI,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AAEH;;AACDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AACd,WAAO,IAAP;AACP;;AACDE,EAAAA,mBAAmB,GAAE;AACjB,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAI,IAAX,EAAiB,OAAO,EAAP;AACjB,WAAOA,IAAP;AACH;;AAjBsB;;AAqB3B,eAAe,IAAIT,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport { API_URL } from '../../Constants'\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass AuthenticationService{\n    registerSuccessfulLogin(username,password){\n        sessionStorage.setItem('authenticatedUser',username);\n    }\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n\n    }\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) return false\n            return true\n    }\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user ===null) return ''\n        return user\n    }\n\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}